[{"C:\\Users\\Pikis\\Desktop\\cart\\src\\index.js":"1","C:\\Users\\Pikis\\Desktop\\cart\\src\\App.js":"2","C:\\Users\\Pikis\\Desktop\\cart\\src\\reportWebVitals.js":"3","C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Context.js":"4","C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Navbar.js":"5","C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Payment.js":"6","C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Home.js":"7","C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Products.js":"8","C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Data.js":"9","C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Product.js":"10","C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Cart.js":"11"},{"size":710,"mtime":1609969771942,"results":"12","hashOfConfig":"13"},{"size":742,"mtime":1609972295355,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":4928,"mtime":1609969542514,"results":"16","hashOfConfig":"13"},{"size":1924,"mtime":1609970965888,"results":"17","hashOfConfig":"13"},{"size":151,"mtime":1609969600602,"results":"18","hashOfConfig":"13"},{"size":272,"mtime":1609971061584,"results":"19","hashOfConfig":"13"},{"size":822,"mtime":1609969628612,"results":"20","hashOfConfig":"13"},{"size":2051,"mtime":1609972269365,"results":"21","hashOfConfig":"13"},{"size":1405,"mtime":1609969616187,"results":"22","hashOfConfig":"13"},{"size":3524,"mtime":1609971742732,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"npi35a",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},"C:\\Users\\Pikis\\Desktop\\cart\\src\\index.js",["51"],"C:\\Users\\Pikis\\Desktop\\cart\\src\\App.js",["52"],"import React from 'react';\nimport logo from './img/logo.jpg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Products from './components/Products';\nimport Details from './components/Details';\nimport Payment from './components/Payment';\nimport { Route, Switch } from 'react-router-dom';\n\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n\n      <Navbar />\n\n\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route exact path='/about' component={About} />\n        <Route exact path='/products' component={Products} />\n        <Route exact path='/payment' component={Payment} />\n        <Route exact path='/details/:id' component={Details} />\n      </Switch>\n\n\n\n\n\n\n\n\n\n    </React.Fragment>\n  );\n}\n\nexport default App;",["53","54"],"C:\\Users\\Pikis\\Desktop\\cart\\src\\reportWebVitals.js",[],"C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Context.js",["55"],"import React, { Component } from 'react';\r\nimport { Data } from './Data';\r\n\r\n\r\nconst ProductContext = React.createContext();\r\n\r\n// provider :provides all the data and generally give us access to data from context\r\n\r\n// consumer which as word say consumes the data fro contxt\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass ProductProvider extends Component {\r\n\r\n\r\n    state = {\r\n\r\n\r\n        navOpen: false,\r\n        cartOpen: false,\r\n        data: Data,\r\n        cart: [],\r\n        total: 0,\r\n        shipping: 10\r\n\r\n    }\r\n\r\n    // for open close\r\n\r\n    handleNav = () => {\r\n\r\n\r\n        if (this.state.cartOpen === true) {\r\n\r\n            this.setState({\r\n                cartOpen: false\r\n            })\r\n        }\r\n\r\n\r\n        this.setState({\r\n            navOpen: !this.state.navOpen\r\n        })\r\n    }\r\n\r\n\r\n    // for open close cart\r\n    handleCartNav = () => {\r\n        if (this.state.navOpen === true) {\r\n            this.setState({\r\n                navOpen: false\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            cartOpen: !this.state.cartOpen\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // if cart is open we want to be closed\r\n    closeNavCart = () => {\r\n        if (this.state.navOpen === true || this.state.cartOpen === true) {\r\n            this.setState({\r\n                navOpen: false,\r\n                cartOpen: false\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // add to cart functionality\r\n    addToCart = (id) => {\r\n\r\n        console.log(`item ${id} added to cart`);\r\n\r\n        const { data, cart } = this.state;\r\n\r\n        let check = this.state.cart.find(item => item.id === id);\r\n\r\n        if (!check) {\r\n\r\n\r\n            const filterData = data.filter(item => {\r\n                return item.id === id\r\n            })\r\n\r\n            //  for each in order to change the situation of cart items\r\n            filterData.forEach(item => {\r\n                item.isInCart = true\r\n\r\n            })\r\n\r\n            this.setState({\r\n                cart: [...this.state.cart, ...filterData],\r\n                cartOpen: true,\r\n            }, () => {\r\n                this.totalItems();\r\n            })\r\n        }\r\n\r\n        else {\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    // delete single items\r\n    deleteItem = (id) => {\r\n\r\n        const { cart } = this.state;\r\n        cart.forEach((item, index) => {\r\n            if (item.id === id) {\r\n                cart.splice(index, 1)\r\n            }\r\n\r\n            item.isInCart = false\r\n        })\r\n\r\n\r\n        this.setState({\r\n            cart: cart\r\n        })\r\n\r\n    }\r\n\r\n    // increase\r\n\r\n    increaseItem = (id) => {\r\n        const { cart } = this.state;\r\n        cart.forEach(item => {\r\n            if (item.id === id) {\r\n                item.count += 1;\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            cart: cart\r\n        }, () => {\r\n            this.totalItems();\r\n        })\r\n    }\r\n\r\n\r\n    // decrease item\r\n    decreaseItem = (id) => {\r\n        const { cart } = this.state;\r\n\r\n        cart.forEach(item => {\r\n            if (item.id === id) {\r\n                item.count === 1 ? item.count = 1 : item.count -= 1;\r\n\r\n            }\r\n\r\n            this.setState({\r\n                cart: cart\r\n            }, () => {\r\n                this.totalItems();\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    // get total items in cart\r\n    totalItems = () => {\r\n        const { cart } = this.state;\r\n\r\n        const cartTotal = cart.reduce((prev, item) => {\r\n            return prev + (item.price * item.count)\r\n        }, 0)\r\n\r\n        this.setState({\r\n            total: cartTotal\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem('dataCart', JSON.stringify(this.state.cart));\r\n        localStorage.setItem('totalCart', JSON.stringify(this.state.total));\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.totalItems();\r\n\r\n        // localstorage\r\n        const dataCart = JSON.parse(localStorage.getItem('dataCart'));\r\n\r\n        if (dataCart !== null) {\r\n            this.setState({\r\n                cart: dataCart\r\n            })\r\n        }\r\n\r\n        const totalCart = JSON.parse(localStorage.getItem('totalCart'));\r\n\r\n        if (totalCart !== null) {\r\n            this.setState({\r\n                total: totalCart\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ProductContext.Provider value={{\r\n\r\n                ...this.state,\r\n                handleNav: this.handleNav,\r\n                closeNavCart: this.closeNavCart,\r\n                handleCartNav: this.handleCartNav,\r\n                addToCart: this.addToCart,\r\n                deleteItem: this.deleteItem,\r\n                increaseItem: this.increaseItem,\r\n                decreaseItem: this.decreaseItem\r\n\r\n\r\n\r\n            }}>\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\n\r\nexport { ProductProvider, ProductConsumer }","C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Navbar.js",[],"C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Payment.js",[],"C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Home.js",["56"],"import React from 'react';\r\nimport backImg from '../img/shoes2.jpg';\r\nimport Products from './Products';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"header\">\r\n                <div className=\"header-info\">\r\n                    <h1><span className=\"header-shoes\">shoes </span> addict</h1>\r\n                    <p>Best shoes are here for all of you</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"products-home\">\r\n                <Products />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Products.js",[],"C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Data.js",[],"C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Product.js",[],"C:\\Users\\Pikis\\Desktop\\cart\\src\\components\\Cart.js",["57"],"import React from 'react';\r\nimport { ProductConsumer } from './Context';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Cart(props) {\r\n    const { cartOpen, closeNavCart, handleCartNav, shipping } = props.valueProps;\r\n    return (\r\n        <ProductConsumer>\r\n            {value => {\r\n                const { cart, total, deleteItem, increaseItem, decreaseItem } = value;\r\n                return (\r\n                    <ul className={cartOpen ? 'newCartNav cartNav cartItem' : 'cartNav cartItem'}>\r\n\r\n                        {cart.length === 0 ?\r\n\r\n                            <div>\r\n                                <span className=\"inside-btn\" onClick={handleCartNav}>X</span>\r\n                                <div className='empty'>\r\n                                    cart is currently empty\r\n               </div>\r\n                            </div> :\r\n\r\n                            <div className=\"cartItem\">\r\n                                <span className=\"inside-btn\" onClick={handleCartNav}>X</span>\r\n\r\n                                {cart.map(product => {\r\n                                    return (\r\n\r\n                                        <div className=\"cart-center\" key={product.id}>\r\n                                            <div className=\"img-cart\">\r\n                                                <img src={product.img} src={`/${product.img}`} alt=\"img\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"item-cart\">\r\n                                                <p>{product.title}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"inc-dec-cart\">\r\n                                                <button onClick={() => decreaseItem(product.id)}>-</button>\r\n                                                {product.count}\r\n                                                <button onClick={() => increaseItem(product.id)}>+</button>\r\n                                            </div>\r\n\r\n                                            <div className=\"price-cart\">\r\n                                                <p>$ {product.price * product.count}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"del-item\" onClick={() => deleteItem(product.id)}>\r\n                                                <i className=\"fa fa-trash\"></i>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n\r\n                                {/* total */}\r\n                                <div className=\"extra-info\">\r\n                                    <h3><span>amount:</span>${total}</h3>\r\n\r\n                                    <div className=\"shipping\">\r\n                                        <h3><span>shipping: </span>{total > 90 ? 'free' : `+${shipping}`}</h3>\r\n                                    </div>\r\n                                    <h3><span>total amount :</span>${total > 90 ? total : total + shipping}</h3>\r\n\r\n                                    <div className=\"payment\" onClick={closeNavCart}><Link to='/payment'>Payment</Link></div>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                        }\r\n\r\n\r\n\r\n\r\n                    </ul>\r\n                )\r\n            }}\r\n        </ProductConsumer>\r\n    )\r\n}",{"ruleId":"58","severity":1,"message":"59","line":6,"column":25,"nodeType":"60","messageId":"61","endLine":6,"endColumn":31},{"ruleId":"58","severity":1,"message":"62","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":12},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"58","severity":1,"message":"67","line":84,"column":23,"nodeType":"60","messageId":"61","endLine":84,"endColumn":27},{"ruleId":"58","severity":1,"message":"68","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":15},{"ruleId":"69","severity":1,"message":"70","line":31,"column":72,"nodeType":"71","endLine":31,"endColumn":95},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'cart' is assigned a value but never used.","'backImg' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]